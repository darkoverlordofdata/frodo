(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by CoffeeScript 1.7.1
var DEBUG_MODE, currentlySelectedPlaceElement, displayFriends, displayMealList, displayPlaces, displaySelectedMeal, handleGenericError, handleOGSuccess, handlePublishOGError, handleStatusChange, logResponse, meals, menuHandler, myFriends, nearbyPlaces, publishOGAction, reauthorizeForPublishPermissions, selectedFriends, selectedMealIndex, selectedPlaceID, selectedPlaceIndex, showPublishConfirmation, updateUserInfo;

DEBUG_MODE = false;

selectedMealIndex = -1;

selectedPlaceIndex = -1;

selectedPlaceID = null;

nearbyPlaces = null;

myFriends = null;

currentlySelectedPlaceElement = null;

selectedFriends = {};

meals = [
  {
    id: "cheeseburger",
    title: "Cheeseburger",
    url: "http://nodescrumptious.azurewebsites.net/meals/cheeseburger"
  }, {
    id: "chinese",
    title: "Chinese",
    url: "http://nodescrumptious.azurewebsites.net/meals/chinese"
  }, {
    id: "french",
    title: "French",
    url: "http://nodescrumptious.azurewebsites.net/meals/french"
  }, {
    id: "hotdog",
    title: "Hot Dog",
    url: "http://nodescrumptious.azurewebsites.net/meals/hotdog"
  }, {
    id: "indian",
    title: "Indian",
    url: "http://nodescrumptious.azurewebsites.net/meals/indian"
  }, {
    id: "italian",
    title: "Italian",
    url: "http://nodescrumptious.azurewebsites.net/meals/italian"
  }, {
    id: "pizza",
    title: "Pizza",
    url: "http://nodescrumptious.azurewebsites.net/meals/pizza"
  }
];

logResponse = function(response) {
  if (typeof console !== "undefined") {
    return console.log("The response was", response);
  }
};

handleStatusChange = function(response) {
  if (response.authResponse) {
    logResponse(response);
    window.location.hash = "#menu";
    return updateUserInfo(response);
  } else {
    return window.location.hash = "#login";
  }
};

updateUserInfo = function(response) {
  return FB.api("/me", {
    fields: "name,first_name,picture"
  }, function(response) {
    var output;
    logResponse(response);
    output = "";
    output += "<img src=\"" + response.picture.data.url + "\" width=\"25\" height=\"25\"></img>";
    output += " " + response.first_name;
    return $("#user-identity").html(output);
  });
};

handleOGSuccess = function() {
  logResponse("[handleOGSuccess] done.");
  showPublishConfirmation();
  selectedMealIndex = -1;
  selectedPlaceIndex = -1;
  selectedPlaceID = null;
  currentlySelectedPlaceElement = null;
  selectedFriends = {};
  $("#select-meal").html("Select one");
  $("#select-location").html("Select one");
  $("#select-friends").html("Select friends");
  return $("#announce").addClass("ui-disabled");
};

handleGenericError = function(e) {
  return logResponse("Error ..." + JSON.stringify(e));
};

handlePublishOGError = function(e) {
  var errorCode;
  logResponse("Error publishing ..." + JSON.stringify(e));
  errorCode = e.code;
  logResponse("Error code ..." + errorCode);
  if (errorCode === "200") {
    return reauthorizeForPublishPermissions();
  }
};

reauthorizeForPublishPermissions = function() {
  logResponse("[reauthorizeForPublishPermissions] asking for additional permissions.");
  return FB.login((function(response) {
    if (!response || response.error) {
      return handleGenericError(response.error);
    } else {
      return publishOGAction(response);
    }
  }), {
    scope: "publish_actions"
  });
};

publishOGAction = function(response) {
  var errorHandler, friendIDArrays, friendId, params;
  errorHandler = null;
  if (!response || response.error) {
    errorHandler = handlePublishOGError;
  } else {
    errorHandler = handleGenericError;
  }
  logResponse("Publishing action...");
  params = {
    meal: meals[selectedMealIndex].url
  };
  if (selectedPlaceID) {
    params.place = selectedPlaceID;
  }
  friendIDArrays = [];
  for (friendId in selectedFriends) {
    if (selectedFriends.hasOwnProperty(friendId)) {
      friendIDArrays.push(friendId);
    }
  }
  if (friendIDArrays.length > 0) {
    params.tags = friendIDArrays.join();
  }
  logResponse("Publish params " + JSON.stringify(params));
  return $.ajax({
    url: "/announce",
    type: "post",
    data: params
  }).success(function(result) {
    return handleOGSuccess(result);
  }).error(function(xhr) {
    try {
      response = JSON.parse(xhr.responseText);
      if (response.error && response.redirectUri) {
        return window.location = response.redirectUri;
      }
    } catch (_error) {}
  });
};

showPublishConfirmation = function() {
  $("#confirmation").append("<p>Publish successful</p>");
  return $("#confirmation").fadeOut(3000, function() {
    $("#confirmation").html("");
    return $("#confirmation").show();
  });
};

displayMealList = function() {
  var output, tmpl;
  logResponse("[displayMealList] displaying meal list.");
  tmpl = $("#meal_list_tmpl").html();
  output = Mustache.to_html(tmpl, meals);
  return $("#meal-list").html(output).listview("refresh");
};

displaySelectedMeal = function() {
  var meal, output, tmpl;
  logResponse("[displaySelectedMeal] displaying selected meal.");
  meal = meals[selectedMealIndex];
  tmpl = $("#selected_meal_tmpl").html();
  output = Mustache.to_html(tmpl, meal);
  return $("#selected_meal").html(output);
};

window.getNearby = function() {
  if (nearbyPlaces) {
    return;
  }
  logResponse("[getNearby] get nearby data.");
  return navigator.geolocation.getCurrentPosition(function(location) {
    logResponse(location);
    return $.ajax({
      url: "/search",
      data: {
        type: "place",
        q: "restaurant",
        center: location.coords.latitude + "," + location.coords.longitude,
        distance: 1000,
        fields: "id,name,picture"
      }
    }).success(function(response) {
      nearbyPlaces = response.data;
      logResponse(nearbyPlaces);
      return displayPlaces(nearbyPlaces);
    }).error(function(err) {
      return logResponse("Error fetching nearby place data.");
    });
  });
};

displayPlaces = function(places) {
  var output, tmpl;
  logResponse("[displayPlaces] displaying nearby list.");
  tmpl = $("#places_list_tmpl").html();
  output = Mustache.to_html(tmpl, places);
  return $("#places-list").html(output).listview("refresh");
};

window.getFriends = function() {
  if (myFriends) {
    return;
  }
  logResponse("[getFriends] get friend data.");
  return $.ajax({
    url: "/friends"
  }).success(function(response) {
    myFriends = response.data;
    logResponse(myFriends);
    return displayFriends(myFriends);
  }).error(function(err) {
    return logResponse("Error fetching friend data.");
  });
};

displayFriends = function(friends) {
  var output, tmpl;
  logResponse("[displayFriends] displaying friend list.");
  tmpl = $("#friends_list_tmpl").html();
  output = Mustache.to_html(tmpl, friends);
  return $("#friends-list").html(output).listview("refresh");
};

$(function() {
  $("#logout").click(function() {
    window.location = "/logout";
    return false;
  });
  $("#announce").click(function() {
    return publishOGAction(null);
  });
  $("#meal-list").on("click", "li", function() {
    selectedMealIndex = $(this).index();
    logResponse("Link in meal listview clicked... " + selectedMealIndex);
    return displaySelectedMeal();
  });
  $("#detail-meal-select").click(function() {
    $("#announce").removeClass("ui-disabled");
    return $("#select-meal").html(meals[selectedMealIndex].title);
  });
  $("#places-list").on("click", "li", function() {
    var selectionId, selectionStatus;
    selectionId = $(this).attr("data-name");
    logResponse("Selected place " + selectionId);
    selectionStatus = $(this).attr("data-icon");
    if (selectionStatus === "false") {
      if (currentlySelectedPlaceElement) {
        currentlySelectedPlaceElement.buttonMarkup({
          icon: false
        });
      }
      $(this).buttonMarkup({
        icon: "check"
      });
      selectedPlaceID = selectionId;
      selectedPlaceIndex = $(this).index();
      $("#select-location").html(nearbyPlaces[selectedPlaceIndex].name);
      return currentlySelectedPlaceElement = $(this);
    } else {
      $(this).buttonMarkup({
        icon: false
      });
      selectedPlaceID = null;
      selectedPlaceIndex = -1;
      return $("#select-location").html("Select one");
    }
  });
  return $("#friends-list").on("click", "li", function() {
    var friendId, friendNameArray, otherFriends, selectedIndex, selectionId, selectionStatus;
    selectionId = $(this).attr("data-name");
    logResponse("Selected friend " + selectionId);
    selectedIndex = $(this).index();
    selectionStatus = $(this).attr("data-icon");
    if (selectionStatus === "false") {
      $(this).buttonMarkup({
        icon: "check"
      });
      selectedFriends[selectionId] = myFriends[selectedIndex].name;
    } else {
      $(this).buttonMarkup({
        icon: false
      });
      delete selectedFriends[selectionId];
    }
    friendNameArray = [];
    for (friendId in selectedFriends) {
      if (selectedFriends.hasOwnProperty(friendId)) {
        friendNameArray.push(selectedFriends[friendId]);
      }
    }
    if (friendNameArray.length > 2) {
      otherFriends = friendNameArray.length - 1;
      $("#select-friends").html(friendNameArray[0] + " and " + otherFriends + " others");
    } else if (friendNameArray.length === 2) {
      $("#select-friends").html(friendNameArray[0] + " and " + friendNameArray[1]);
    } else if (friendNameArray.length === 1) {
      $("#select-friends").html(friendNameArray[0]);
    } else {
      $("#select-friends").html("Select friends");
    }
    return logResponse("Current select friends list: " + selectedFriends);
  });
});

$(document).delegate("#meals", "pageinit", function() {
  return displayMealList();
});

$("body").bind("hideOpenMenus", function() {
  return $("ul:jqmData(role='menu')").find("li > ul").hide();
});

menuHandler = function(e) {
  $("body").trigger("hideOpenMenus");
  $(this).find("li > ul").show();
  return e.stopPropagation();
};

$("ul:jqmData(role='menu') li > ul li").click(function(e) {
  $("body").trigger("hideOpenMenus");
  return e.stopPropagation();
});

$("body").delegate("ul:jqmData(role='menu')", "click", menuHandler);

$("body").click(function(e) {
  return $("body").trigger("hideOpenMenus");
});

},{}]},{},[1])
//@ sourceMappingURL=data:application/json;base64,
